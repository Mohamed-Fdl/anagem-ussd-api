/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Royalty as PrismaRoyalty } from "@prisma/client";

export class RoyaltyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RoyaltyCountArgs, "select">): Promise<number> {
    return this.prisma.royalty.count(args);
  }

  async royalties(args: Prisma.RoyaltyFindManyArgs): Promise<PrismaRoyalty[]> {
    return this.prisma.royalty.findMany(args);
  }
  async royalty(
    args: Prisma.RoyaltyFindUniqueArgs
  ): Promise<PrismaRoyalty | null> {
    return this.prisma.royalty.findUnique(args);
  }
  async createRoyalty(args: Prisma.RoyaltyCreateArgs): Promise<PrismaRoyalty> {
    return this.prisma.royalty.create(args);
  }
  async updateRoyalty(args: Prisma.RoyaltyUpdateArgs): Promise<PrismaRoyalty> {
    return this.prisma.royalty.update(args);
  }
  async deleteRoyalty(args: Prisma.RoyaltyDeleteArgs): Promise<PrismaRoyalty> {
    return this.prisma.royalty.delete(args);
  }
}
